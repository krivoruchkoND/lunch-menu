{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["BasicExample","Container","Row","className","Col","xs","Dropdown","Toggle","variant","id","Menu","Item","as","to","exact","path","Home","About","Deals","Lunch","Drinks","Card","CarouselDraft","Carousel","pause","src","alt","Caption","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad43ba59.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport { Container, Dropdown, Row, Col, Card, Carousel, Button } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function BasicExample() {\n  return (\n    <Router>\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col xs={2}>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Menu\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item as=\"button\"><Link to=\"/deals\">today's deals</Link></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><Link to=\"/lunch\">business lunch</Link></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><Link to=\"/menu\">menu</Link></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><Link to=\"/drinks\">drinks</Link></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><Link to=\"/about\">about us</Link></Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col>\n            <h2 className=\"text-center\"><Link to=\"/\">Restaurant lunch menu</Link></h2>\n          </Col>\n        </Row>\n        <hr />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/deals\">\n            <Deals />\n          </Route>\n          <Route path=\"/lunch\">\n            <Lunch />\n          </Route>\n          <Route path=\"/menu\">\n            <Menu />\n          </Route>\n          <Route path=\"/drinks\">\n            <Drinks />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <Container className=\"text-center\">\n      <Card>\n        <div className=\"card-body\">\n          <Link to=\"/deals\">Special offer</Link>\n        </div>\n      </Card>\n      <hr />\n      <Card>\n        <div className=\"card-body\">\n          <Row>\n            <Col>CarouselNew</Col>\n            <Col>Recomended</Col>\n            <Col>Hot</Col>\n          </Row>\n        </div>\n      </Card>\n      <hr />\n      <Card>\n        <div className=\"card-body\">\n          <Link to=\"/lunch\">Build your lunch</Link>\n        </div>\n      </Card>\n    </Container>\n  );\n}\n\nfunction About() {\n  return (\n    <Container>\n      <h2>About</h2>\n    </Container>\n  );\n}\n\nfunction Deals() {\n  return (\n    <Container>\n      <h2>Deals</h2>\n    </Container>\n  );\n}\n\nfunction Menu() {\n  return (\n    <Container>\n      <h2>Menu</h2>\n    </Container>\n  );\n}\n\nfunction Drinks() {\n  return (\n    <Container>\n      <h2>Drinks</h2>\n    </Container>\n  );\n}\n\nfunction CarouselDraft() {\n  return (\n    <Carousel pause>\n      <Carousel.Item>\n        <img\n          className=\"d-block mx-auto\"\n          src=\"https://via.placeholder.com/200x100.png\"\n          alt=\"First slide\"\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block mx-auto\"\n          src=\"https://via.placeholder.com/200x100.png\"\n          alt=\"Third slide\"\n        />\n\n        <Carousel.Caption>\n          <h3>Second slide label</h3>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block mx-auto\"\n          src=\"https://via.placeholder.com/200x100.png\"\n          alt=\"Third slide\"\n        />\n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n  );\n}\n\nfunction Lunch() {\n  return (\n    <Container className=\"text-center\">\n      <Card>\n        <h1>Build your lunch</h1>\n      </Card>\n      <Card className=\"bg-secondary\">\n        <CarouselDraft />\n      </Card>\n      <Card className=\"bg-secondary\">\n        <CarouselDraft />\n      </Card>\n      <Card className=\"bg-secondary\">\n        <CarouselDraft />\n      </Card>\n      <Card className=\"bg-secondary\">\n        <CarouselDraft />\n      </Card>\n      <Card>\n        <Button className=\"w-25 mx-auto\">Order</Button>\n      </Card>\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}